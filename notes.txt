Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 10:30 AM (20 mins)
    Lunch Break : 1:00 PM (1 hr)
    Tea Break   : 3:30 PM (20 mins)
    Wind Up     : 5:30 PM

Methodolgy:
    No powerpoints
    100% hands on training

About You:
    Name
    Primary Skillset
    Experience in Go
    Have you attended MY basics class?

Repository:
    https://github.com/tkmagesh/IBM-AdvGo-Sep-2022


Basics:
    Simplicity
        Everything is a value (No reference types)
        No classes (Only struct)
        Only One loop construct
        Compilation restrictions
            Unused variables are not allowed (at function scope)
        Cross platform Compilation
        
        No exceptions (ONLY errors)
            No try catch finally block support

        Functions
            Anonymous functions
            Higher Order functions
            deferred functions

        Panic & recovery

Data Types

    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real [float32] + imaginary [float32])
    complex128 (real [float64] + imaginary [float64])

    byte (alias for uint8)
    rune (alias for int32) (unicode character code point)
    
Concurrency
    - Never assume the time taken for a goroutine to execute
    - Never assume the sequence of execution of the goroutines

    Channel
        - A receive operation is ALWAYS a blocking operation
        - A send operation is blocked until a receive operation is initialized (non-buffered channel)
        - A send operation is NOT blocked if the buffer is not full (buffered channel)


Assignment:
    As of now, there is not limit on the number of resources that can be created using the pool
    Modify the pool api in such a way that the number of resources created is equivalent to the pool size


gRPC
    http2 protocol
    protobuf 
    Support for many language
    Suitable for inter-service communication in microservices architecture

    Stub
    Proxy
    Protobuf definitions are shared between the client and the server
        Service Contracts
        Operation Contracts
        Message Contracts

    Communication Patterns
        - Request & Request
        - Client Streaming (many requests & one response)
        - Server Streaming (one request & many responses)
        - Bidirectional Streaming (many requests & many responses)
        

    Installation
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

        (when the above is installed, executables are created in the gopath/bin folder. Make sure this path is set in environment variables)

        Windows
            Install the binaries from https://github.com/protocolbuffers/protobuf/releases/

        Mac
            brew install protoc-gen-go
            brew install protoc-gen-go-grpc

    Installation verification
        protoc --version

    To Generate proxy & stub (run the command in the folder of go.mod file)
        protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/service.proto

    
    Exhibit an operation (GeneratePrimes) that generates the prime numbers between the given 'start' and 'end'


Http Services
    1. Using the native apis
    2. Using 3rd party routing libraries (httprouter)
        Complete the getProductHandler function
        Implement the delete product functionality
    3. Web Frameworks
        Gin
        GORM (ORM)

http://localhost:8080/products/100